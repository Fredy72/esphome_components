remote_package:
  url: https://github.com/Jopand/esphome_components
  ref: develop
  files: [components/nilan/all.yaml]
  refresh: 0s

sensor:
#########################
#### INPUT REGISTERS ####
#########################
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Exhaust temperature"
    id: nilan_exhaust_temp_t3
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    value_type: S_WORD
    register_type: read
    address: 203
    filters:
      - multiply: 0.01
      
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Outlet temperature"
    id: nilan_outlet_temp_t4
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    value_type: S_WORD
    register_type: read
    address: 204
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Outdoor temperature"
    id: nilan_outdoor_temp_t8
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    value_type: S_WORD
    register_type: read
    address: 208
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Heat exchange efficiency"
    id: nilan_heat_exchange_efficiency
    unit_of_measurement: '%'
    accuracy_decimals: 1
    register_type: read
    address: 1204
    filters:
      - multiply: 0.01
      
###########################
#### HOLDING REGISTERS ####
###########################
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Inlet fan speed"
    id: nilan_inlet_fan_speed
    unit_of_measurement: '%'
    icon: "mdi:percent"
    accuracy_decimals: 0
    register_type: holding
    address: 201
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Cooling set temperature"
    id: nilan_cooling_set_temp
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    register_type: holding
    address: 1200
    filters:
      - multiply: 0.01
      
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Min summer temperature"
    id: nilan_min_summer_temp
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    register_type: holding
    address: 1201
    filters:
      - multiply: 0.01 
  
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Min winter temperature"
    id: nilan_min_winter_temp
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    register_type: holding
    address: 1202
    filters:
      - multiply: 0.01 
  
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Max summer temperature"
    id: nilan_max_summer_temp
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    register_type: holding
    address: 1203
    filters:
      - multiply: 0.01 
  
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Max winter temperature"
    id: nilan_max_winter_temp
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    register_type: holding
    address: 1204
    filters:
      - multiply: 0.01

binary_sensor:
#########################
#### INPUT REGISTERS ####
#########################
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Air filter alarm"
    id: nilan_filter_alarm
    register_type: read
    address: 101
    bitmask: 1
    
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Door open"
    id: nilan_door_open
    register_type: read
    address: 102
    bitmask: 1
    
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Motor thermo fuse"
    id: nilan_motor_thermo_fuse
    register_type: read
    address: 104
    bitmask: 1

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Heating surface frost/overheat"
    id: nilan_heating_surface_frost_oerheat
    register_type: read
    address: 105
    bitmask: 1

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Airflow monitor"
    id: nilan_airflow_monitor
    register_type: read
    address: 106
    bitmask: 1

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Low pressure switch"
    id: nilan_low_pressure
    register_type: read
    address: 108
    bitmask: 1

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "User function 2"
    id: nilan_user_function_2
    register_type: read
    address: 113
    bitmask: 1

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Air damper closed"
    id: nilan_damper_closed
    register_type: read
    address: 114
    bitmask: 1

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Air damper opened"
    id: nilan_damper_opened
    register_type: read
    address: 115
    bitmask: 1

text_sensor:
  - platform: template
    name: "Air filter alarm status"
    lambda: |-
      if (id(nilan_filter_alarm).state) {
        return {"Skift filter"};
      } else {
        return {"Filter OK"};
      }  
      
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Aggregate type"
    id: nilan_platform_id
    register_type: holding
    address: 1000
    lambda: !lambda |-
      uint16_t int_type = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed aggregate type int : %d", int_type);
      std::string type_str;
      switch (int_type) {
        case 0: type_str = "None"; break;
        case 1: type_str = "Test"; break;
        case 2: type_str = "VPL 10 uden køl"; break;
        case 3: type_str = "VPL 15 uden køl"; break;
        case 4: type_str = "VPL 15 med køl"; break;
        case 5: type_str = "VPL 25 med 3 hastigheder uden køl"; break;
        case 6: type_str = "VPL 25 med 3 hastigheder med køl"; break;
        case 7: type_str = "VPL 28 2 hastigheder uden køl"; break;
        case 8: type_str = "VPL 28 med 2 hastigheder med køl"; break;
        case 9: type_str = "VP 18 med kryds monteret oven på anlæg uden køl"; break;
        case 10: type_str = "VP 18 med kryds monteret oven på anlæg med køl"; break;
        case 11: type_str = "Vp 18 Compact og Compact p uden køl"; break;
        case 12: type_str = "VP 18 Compact og Compact P med køl"; break;
        case 13: type_str = "Comfort anlæg (Comfort 300 LR)"; break;
        case 14: type_str = "CT 150 anlæg med 1-2-3 omskifter"; break;
        case 15: type_str = "VLX som kører VAV"; break;
        case 16: type_str = "VLX med 2 trin"; break;
        case 17: type_str = "VLX med 3 trin"; break;
        case 18: type_str = "VP 18 uden køl"; break;
        case 19: type_str = "VP 18 med køl"; break;
        case 20: type_str = "VP 18 med elkedel uden køl"; break;
        case 21: type_str = "VP 18 med elkedel og køl"; break;
        case 22: type_str = "VGU 250 brugsvands varmepumpe"; break;
        case 23: type_str = "VGU 250 brugsvands varmepumpe med elkedel"; break;
        case 24: type_str = "VPL 25 uden køl"; break;
        case 25: type_str = "VPL 25 med køl"; break;
        case 26: type_str = "VPM 120-560"; break;
        case 27: type_str = "Comfort 1200 - 4000"; break;
        case 28: type_str = "VP 20 Compact gorona"; break;
        case 29: type_str = "VLX med CTS 602 print"; break;
        case 30: type_str = "Compact P Nordic"; break;
        case 31: type_str = "Comfort Nordic"; break;
        case 32: type_str = "VP 18 Version 1"; break;
        case 33: type_str = "Combi 300"; break;
        case 34: type_str = "Compact med 4-vejsventil uden køl"; break;
        default: type_str = "Unknown"; break;
      }
      return type_str;